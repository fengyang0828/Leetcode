#1. Simple idea
    Use one hashmap
class Solution {
    public char findTheDifference(String s, String t) {
        Map<Character, Integer> map = new HashMap<>();
        for (int i = 0; i < s.length(); i++) {
            if (map.containsKey(s.charAt(i))) {
                map.put(s.charAt(i), map.get(s.charAt(i)) + 1);
            }
            else {
                map.put(s.charAt(i), 1);
            }
        }

        for (int i = 0; i < t.length(); i++) {
            if(!map.containsKey(t.charAt(i))) {
                return t.charAt(i);
            }
            else {
                map.put(t.charAt(i), map.get(t.charAt(i)) - 1);
                if (map.get(t.charAt(i)) < 0)
                    return t.charAt(i);
            }
        }
        return ' ';
    }
}

#2. Use sum
    more simpler than hashmap
            int result = 0;
            for (int i = 0; i < t.length(); i++) {
                result += t.charAt(i);
            }
            for (int i = 0; i < s.length(); i++) {
                result -= s.charAt(i);
            }
            return (char)result;

#3. Use bit maniupation
    If we have two strings, “ab” and “abc”, then c = (a XOR b) XOR (a XOR b XOR c).
    One of XOR properties is a XOR b = b XOR a. So c = (a XOR a) XOR (b XOR b) XOR c.

            char c = 0;
    	    for (int i = 0; i < s.length(); ++i) {
    		    c ^= s.charAt(i);
    	    }
    	    for (int i = 0; i < t.length(); ++i) {
    		    c ^= t.charAt(i);
    	    }
    	    return c;