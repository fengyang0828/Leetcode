#1. Solution one: brute force
the time complexity is O(kn)
class Solution {
    public double findMaxAverage(int[] nums, int k) {
        double max = (double)Integer.MIN_VALUE;
        if(nums.length == 0 || nums == null) return (double)0;
        for(int i = 0; i <= nums.length - k; i++)
        {
            int sum = 0;
            for(int j = i; j < i + k; j++)
            {
                sum += nums[j];
            }
            double avg = (double) sum / k;
            max = Math.max(max, avg);
        }
        return max;
    }
}

#2. Slide window with time complexity O(n)
        int sum = 0;
        // handle special case: nums.length < k
        for(int i = 0; i < k; i++)
        {
            sum += nums[i];
        }
        double max = (double)sum / k;
        for(int i = k; i < nums.length; i++)
        {
            sum -= nums[i - k];
            sum += nums[i];
            double avg = (double)sum / k;
            max = Math.max(avg, max);
        }
        return max;