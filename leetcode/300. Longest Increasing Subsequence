#1. very simple dp idea, the time complexity is O(n2)
    class Solution {
        public int lengthOfLIS(int[] nums) {
            if (nums == null || nums.length == 0) {
                return 0;
            }
            int[] dp = new int[nums.length];
            dp[0] = 1;
            int totalmax = 0;
            for (int i = 0; i < nums.length; i++) {
                int max = 1;
                for (int j = 0; j < i; j++) {
                    if (nums[j] < nums[i]) {
                        max = Math.max(max, dp[j] + 1);
                    }
                }
                dp[i] = max;
                totalmax = Math.max(dp[i], totalmax);
            }
            return totalmax;

        }
    }