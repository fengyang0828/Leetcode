#1. Solution 1: O(n) to built, O(1) to query..
use a sum array to compute sum[j] means sum from nums[0] to nums[j];
edge case is important!!!!

class NumArray {
    int len = 0;
    int[] nums;
    int[] dp;
    public NumArray(int[] nums) {
        if(nums == null || nums.length == 0) return;
        this.nums = nums;
        len = nums.length;
        dp = new int[len];
        int sum = 0;
        for(int i = 0; i < len; i++)
        {
            sum += nums[i];
            dp[i] = sum;
        }

    }

    public int sumRange(int i, int j) {
        if(i < 1) return dp[j];
        else
            return dp[j] - dp[i - 1];
    }
}