Longest substring means that it must be a substring, but subsequence means it just be a sequence
class Solution {

    // we can do this for every character in s, to find the left and right of it is same or not
    // and store the index and maxvalue
    int index = 0;
    int max = Integer.MIN_VALUE;
    int len;

    public String longestPalindrome(String s) {

        len = s.length();
        if(len < 2)
            return s;   // for len = 0 or len = 1, the longeststring is s.

        for(int i = 0; i < len - 1; i++)
        {
            LPhelper(s, i, i); // for len = odd number;
            // to optimize the algorithm
            if(s.charAt(i) == s.charAt(i + 1))
                LPhelper(s, i, i + 1);
        }

        return s.substring(index, index + max);

    }

    public void LPhelper(String s, int left,int right)
    {
        while(left >= 0 && right <= len - 1 && s.charAt(left) == s.charAt(right))
        {
            left--;
            right++;
        }

        if( max < right - left - 1)
        {
            max = right - left - 1;
            index = left + 1;
        }
    }
}