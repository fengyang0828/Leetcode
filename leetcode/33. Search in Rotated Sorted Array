#1. based on #153, use two binary search.
    2*logn
class Solution {
    public int search(int[] nums, int target) {
        if(nums == null || nums.length == 0) return -1;
        int start = 0;
        int end = nums.length - 1;
        if(nums[start] < nums[end]) end = 0;
        while (start + 1 < end){
            int mid = start + (end - start) / 2;
            if(nums[mid] < nums[end]){
                end = mid;
            }
            else{
                start = mid;
            }
         }
        System.out.println(end);
        if(nums[end] == target) return end;
        else if(nums[end] > target){
            return -1;
        }
        else if (nums[nums.length - 1] >= target){
            start = end;
            end = nums.length - 1;
        }
        else{
            start = 0;
            //end = end;
        }
        while(start <= end){
            int mid = start + (end - start) / 2;
            if(nums[mid] == target)
                return mid;
            else if(nums[mid] > target){
                end = mid - 1;
            }
            else{
                start = mid + 1;
            }
        }
        return -1;
    }
}