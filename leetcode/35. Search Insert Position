#1. for the case not find, low will remain for every case.
class Solution {
    public int searchInsert(int[] nums, int target) {
        int low = 0;
        int high = nums.length - 1;
        while(low <= high)
        {
            int mid = low + (high - low) / 2;
            if(nums[mid] == target)
                return mid;
            if(nums[mid] < target)
                low = mid + 1;
            else
                high = mid - 1;
        }

        //not find
        if(target > nums[nums.length - 1])
            return nums.length;
        else if(target < nums[0])
            return 0;
        else
        {
            return low;
        }
    }
}