#1. the question is important is that we must handle the duplicate for i.
    class Solution {
        public List<List<Integer>> threeSum(int[] nums) {
            List<List<Integer>> res = (ArrayList)new ArrayList<>();
            int result = 0;
            Arrays.sort(nums);
            int length = nums.length;
            for (int i = 0; i < length - 2; i++) {
                while (i > 0 && i < length - 2 && nums[i] == nums[i - 1]) i++;
                // here we need to handle!!!!!, we should avoid to pick same i, so we need to compare the i and i-1. but not i and i + 1
                int j = i + 1;
                int k = length - 1;
                while (j < k) {
                    int sum = nums[i] + nums[j] + nums[k];
                    if (sum == 0) {
                        ArrayList<Integer> sublist = new ArrayList<>();
                        sublist.add(nums[i]);
                        sublist.add(nums[j]);
                        sublist.add(nums[k]);
                        res.add(sublist);
                        while (j < k && nums[j] == nums[j + 1]) {
                            j++;
                        }
                        while (j < k && nums[k] == nums[k - 1]) {
                            k--;
                        }
                        j++;
                        k--;
                    }
                    else if (sum > 0){
                        k--;
                    }
                    else {
                        j++;
                    }
                }
            }
            return res;
        }
    }