    !!this is calculating the subarray, what if the subsequence # 673
#1. there are a lot of trap here!!
    if nums == null || nums.length == 0, then return 0
    and max should initiate 1 not 0
    and sum should be set back to 1 not 0
    max should update every time sum change.

class Solution {
    public int findLengthOfLCIS(int[] nums) {
        if (nums == null || nums.length == 0) {
            return 0;
        }
        int max = 1;
        int sum = 1;
        for (int i = 0; i < nums.length - 1; i++) {
            if (nums[i + 1] > nums[i]) {
                sum++;
            }
            else {
                sum = 1;
            }
            max = Math.max(sum, max);
        }
        return max;

    }
}